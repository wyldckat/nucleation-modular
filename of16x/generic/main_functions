#!/bin/bash
#-----------------------------------------------------------------------
#   Nucleation - Nucleation (an unofficial OpenFOAM Installer) lower
#the work to have foam in your system.
#
#   visit: http://code.google.com/p/nucleation/
#
#-----------------------------------------------------------------------
#    This file is part of Nucleation.
#
#    Nucleation is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    Nucleation is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with Nucleation.  If not, see <http://www.gnu.org/licenses/>.
#-----------------------------------------------------------------------

#-- USER INTERFACE FUNCTIONS ------------------------------------------------------
#list of functions herein:

#global variables used by this script:
#   INST_SYSTEM - System variant for installation - defined in the master script

#Code -----------------------------------------
echo "Sourcing Main functions functions for OpenFOAM $OF_LONG_VERSION and Ubuntu..."

#Define files (including paths) to the files this script provides for of$OF_SHORT_VERSION/system
#NOTE: This function must always exist!
function define_script_s_files_ofv_system()
{
  #Nothing to do for now...
  :
}

#also define files pertinent to each system
#NOTE: This function must always exist!
function define_packages_to_download_system()
{
  if [ "$arch" == "x64" ]; then
    if ! [ "$INSTALLMODE" == "fresh" -a "$USE_REPO_PV" == "on" -o "$USE_KITWARE_PV" == "on" ]; then
      #CMake is needed in case it isn't provided by the system
      CMAKEVERSION="0.00"
      if which cmake > /dev/null; then
        CMAKEVERSION=`cmake --version | sed -e 's=.*\([0-9]\.[0-9]\)-patch\ =\1='`
      fi
      if isleftlarger_or_equal 2.7 $CMAKEVERSION || isleftlarger_or_equal $CMAKEVERSION 0.00; then
        THIRDPARTY_BIN_CMAKE="ThirdParty-1.6.linuxGcc.gtgz"
      fi
    fi
  fi
}

#It will request any fixes deemed necessary to gcc after it is built
#NOTE: This function must always exist!
function fix_gcc_if_necessary()
{
  #TODO: this won't be necessary if we build cmake too, since then there won't be
  #any more dependencies to the system's libraries!
  if [ "$arch" == "x64" -a "x$THIRDPARTY_BIN_CMAKE" != "x" ]; then
    #this function is defined in the of16x/generic/fixes script
    link_gcc_libraries_to_system
  fi
}
