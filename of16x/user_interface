#!/bin/bash

#-- USER INTERFACE FUNCTIONS ------------------------------------------------------
#list of functions herein:
#   check_options_sanity()

#global variables used by this script:
#   INST_SYSTEM - System variant for installation - defined in the master script
#   SCRIPT_WORKFOLDER - the work folder for the script (contains all of the dependencies of the script) - defined in the master script
#   OF_SHORT_VERSION - short version of OpenFOAM to be installed - defined in common/user_interface
#   INSTALLMODE   - option for the installation mode - defined in common/user_interface
#   GUI_BACKTITLE - The back title for the dialogs
#   USE_REPO_PV         - option for using the system's ParaView - defined in common/user_interface
#   USE_KITWARE_PV         - option for using the system's ParaView - defined in common/user_interface
#   BUILD_QT            - option for building Qt - defined in common/user_interface
#   BUILD_PARAVIEW      - option for building ParaView - defined in common/user_interface
#   BUILD_PARAVIEW_WITH_GUI - option for building ParaView with GUI - defined in common/user_interface
#   BUILD_PARAVIEW_WITH_MPI - option for building ParaView with MPI - defined in common/user_interface
#   BUILD_PARAVIEW_WITH_PYTHON - option for building ParaView with Python - defined in common/user_interface
#   BUILD_PARAVIEW_WITH_OSMESA - option for building ParaView with OSMesa - defined in common/user_interface


#Code -----------------------------------------
echo "Sourcing User Interface functions for OpenFOAM 1.6.x..."

#source system related script
if [ "x$INST_SYSTEM" != "x" -a "x${SCRIPT_WORKFOLDER}" != "x" ]; then
  . ${SCRIPT_WORKFOLDER}/of${OF_SHORT_VERSION}/${INST_SYSTEM}/user_interface
else
  echo "The variable INST_SYSTEM and/or SCRIPT_WORKFOLDER is/are empty and they are crucial to exist! Aborting execution."
  exit 1
fi


#Check the sanity of the options
#NOTE: This function must always exist!
function check_options_sanity()
{
  #Check the sanity of the options, depending on the target system
  check_options_sanity_for_system

  if [ "x$INSTALLMODE" != "xcustom" ] && \
     ! [ "x$INSTALLMODE" == "xfresh" -a "x$USE_REPO_PV" == "xon" -o "x$USE_KITWARE_PV" == "xon" ]; then

    if [ "x$INSTALLMODE" == "xserver" ]; then
        BUILD_PARAVIEW=on
        BUILD_PARAVIEW_WITH_GUI=off
        BUILD_PARAVIEW_WITH_MPI=on
        dialog --sleep 6 --backtitle "$GUI_BACKTITLE"   \
        --title "Server Install settings" \
        --infobox "Installer in server install mode. \n ParaView will be build without GUI and with MPI support" 5 70
    fi

    #verifying ParaView Build options, just in case
    if [ "x$BUILD_PARAVIEW" == "xoff" ]; then
      if [ "x$BUILD_PARAVIEW_WITH_MPI" == "xon" -o "x$BUILD_PARAVIEW_WITH_PYTHON" == "xon" -o \
          "x$BUILD_PARAVIEW_WITH_GUI" == "xoff" -o "x$BUILD_QT" == "xon" ]; then
          BUILD_PARAVIEW=on
          dialog --sleep 6 --backtitle "$GUI_BACKTITLE"   \
          --title "Non-optional setting detected!" \
          --infobox "\nParaView will need to be built, since the pre-built version isn't enough for the chosen options." 10 70
      fi
    fi

    if [ "x$BUILD_PARAVIEW" == "xon" -a "x$BUILD_PARAVIEW_WITH_MPI" == "xoff" -a \
        "x$BUILD_PARAVIEW_WITH_GUI" == "xoff" ]; then
        BUILD_PARAVIEW_WITH_MPI=on
        dialog --sleep 6 --backtitle "$GUI_BACKTITLE"   \
        --title "Bad options detected!" \
        --infobox "\nParaView must be built with either MPI or GUI. Since you've defined both Off, will assume server mode and turn on MPI." 10 70
    fi

  fi
}

